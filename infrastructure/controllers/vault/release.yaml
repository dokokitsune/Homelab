apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vault
  namespace: vault
spec:
  interval: 30m
  chart:
    spec:
      chart: vault
      version: 0.30.0
      sourceRef:
        kind: HelmRepository
        name: hashicorp
        namespace: flux-system
      interval: 12h
  values:
    global:
      tlsDisable: false
    injector:
      enabled: true
      image:
        repository: "hashicorp/vault-k8s"
        tag: "1.7.0"

      resources:
        requests:
          memory: "256Mi"
          cpu: "250m"
        limits:
          memory: "256Mi"
          cpu: "250m"

    server:
      volumes:
        - name: vault-server-tls
          secret:
            secretName: vault-server-tls

      volumeMounts:
        - name: vault-server-tls
          mountPath: /vault/tls
          readOnly: true
      podDisruptionBudget:
        maxUnavailable: 1
      resources:
        requests:
          memory: "512Mi"
          cpu: "250m"
        limits:
          memory: "1Gi"
          cpu: "500m"

      readinessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
      livenessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true"
        initialDelaySeconds: 60

      auditStorage:
        enabled: true
        size: 5Gi
        storageClassName: "iscsi"

        standalone:
          enabled: false

      extraSecretEnvironmentVars:
        - envName: AWS_ACCESS_KEY_ID
          secretName: vault-aws-creds
          secretKey: AWS_ACCESS_KEY_ID
        - envName: AWS_SECRET_ACCESS_KEY
          secretName: vault-aws-creds
          secretKey: AWS_SECRET_ACCESS_KEY
      dataStorage:
        enabled: true
        size: 10Gi
        mountPath: "/vault/data"
        storageClassName: "iscsi"
        accessMode: ReadWriteOnce

      ha:
        enabled: true
        replicas: 3
        raft:
          enabled: true
          config: |
            ui = true
            listener "tcp" {
              address = "[0.0.0.0]:8200"
              cluster_address = "[0.0.0.0]:8201"
              tls_cert_file = "/vault/tls/tls.crt"
              tls_key_file = "/vault/tls/tls.key"
            }
            seal "awskms" {
              region = "us-west-2"
              kms_key_id = "765bd6ab-accb-421f-9ace-b31771c2887e"
            }
            storage "raft" {
              path = "/vault/data"
              retry_join {
                leader_api_addr = "https://vault-0.vault-internal:8200"
                leader_ca_cert_file = "/vault/tls/ca.crt"
                leader_client_cert_file = "/vault/tls/tls.crt"
                leader_client_key_file = "/vault/tls/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-1.vault-internal:8200"
                leader_ca_cert_file = "/vault/tls/ca.crt"
                leader_client_cert_file = "/vault/tls/tls.crt"
                leader_client_key_file = "/vault/tls/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-2.vault-internal:8200"
                leader_ca_cert_file = "/vault/tls/ca.crt"
                leader_client_cert_file = "/vault/tls/tls.crt"
                leader_client_key_file = "/vault/tls/tls.key"
              }
            }
            service_registration "kubernetes" {}
    ui:
      enabled: true
      service:
        type: LoadBalencer
        servicePort: 8200
